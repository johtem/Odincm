@page "./Articles/{slug?}"
@model OdinCM.Pages.Articles.DetailsModel

@functions{
    public int CalculateReadTime(string content)
    {
        var wpm = 275.0m;  // 275 word per minute
        var wordCount = content.Split(' ').Length;
        return (int)Math.Ceiling(wordCount / wpm);
    }
}


@{
    ViewData["Title"] = "Details";
}



<h2>@Model.Article.Topic</h2>
<h5>Last Published: <span data-value="@Model.Article.Published" class="timeStampValueL"> @Model.Article.Published</span></h5>
<h5>View Count: <span data-value="@Model.Article.ViewCount">@Model.Article.ViewCount</span></h5>
<h6>Estimated Reading Time (minutes): <span> @CalculateReadTime(Model.Article.Content)</span></h6>
<br />

<markdown>@Model.Article.Content</markdown>

<div>
    <a asp-page="./Edit" asp-route-id="@Model.Article.Id">Edit</a>
    @if (Model.Article.Slug != "home-page")
    {
        <text> |</text> <a href="~/Articles">Back to Home</a>
    }

</div>

@await Component.InvokeAsync("CreateComments", new Models.Comment { IdArticle = Model.Article.Id })
@await Component.InvokeAsync("ListComments", Model.Article.Comments)

@section Scripts {
    @await Html.PartialAsync("_EditorScript")
}

@section Styles {
    @await Html.PartialAsync("_EditorStyle")
    <style>
        .labelDisplayName {
            font-weight: bold;
            text-transform: capitalize;
            color: #007bb8 !important;
        }

        .labelCommentedOn {
            color: #A6A6A6;
            font-size: 10px;
            height: 10px;
        }

    </style>
}
